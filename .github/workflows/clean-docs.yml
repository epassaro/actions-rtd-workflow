#  If you use this workflow, please acknowledge it
#
#  author:          Ezequiel PÃ¡ssaro (@epassaro)
#  organization:    TARDIS-SN (@tardis-sn)
#  license:         MIT

name: clean-docs

on:

  delete:
    branches:                           # remove deleted branches or tags
      - '*'
    tag:
      - '*'

  pull_request_target:                  # remove closed or merged pull requests
    branches:
      - '*'
    types:
      - closed

env:
  DEPLOY_BRANCH: gh-pages               #  deployed docs branch

jobs:
  clean:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: Set folder to delete
        run: |
          if [[ $EVENT == delete ]]; then
            echo "DEST_DIR=$EVENT_TYPE/$EVENT_REF" >> $GITHUB_ENV

          elif [[ $EVENT == pull_request_target ]]; then
            echo "DEST_DIR=pull/$PR" >> $GITHUB_ENV

          else
            echo "Unexpected event trigger $EVENT"
            exit 1

          fi
          cat $GITHUB_ENV
        env:
          EVENT: ${{ github.event_name }}
          EVENT_REF: ${{ github.event.ref }}
          EVENT_TYPE: ${{ github.event.ref_type }}
          PR: ${{ github.event.number }}

      - name: Clean ${{ env.DEST_DIR }}
        run: |
          git fetch origin ${{ env.DEPLOY_BRANCH }}
          git checkout ${{ env.DEPLOY_BRANCH }}
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com

          if [[ -d $DEST_DIR ]]; then
            git rm -rf $DEST_DIR
            git commit -m "clean $DEST_DIR"
            git push

          else
            echo "$DEST_DIR does not exist"

          fi
